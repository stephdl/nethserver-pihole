#!/usr/bin/bash

bridgeAeria=$(/sbin/e-smith/config getprop docker bridgeAeria)

if [[ -z ${bridgeAeria} ]]; then
    echo "# Bridge for aeria doesn't exist"
    exit 0
fi

HasNetwork=$(docker network ls -f name=aeria -q)
if [[ $? != 0 ]]; then
    exit 1
fi

if [[ -z ${HasNetwork} ]]; then
    echo "# Aeria doesn't exist"
    exit 0
fi

HasPihole=$(docker ps -f name=pihole -q -a)
if [[ $? != 0 ]]; then
    exit 1
fi

if [[ -n ${HasPihole} ]]; then
    echo "# Pihole already exists"
    exit 0
fi

timezone=$(/sbin/e-smith/config getprop pihole timezone)
password=$(/sbin/e-smith/config getprop pihole password)
DNS1=$(/sbin/e-smith/config getprop pihole DNS1)
DNS2=$(/sbin/e-smith/config getprop pihole DNS2)
mac=$(/sbin/e-smith/config getprop pihole mac)
if [[ -z ${mac} ]]; then
    mac=00:60:2f$(od -txC -An -N3 /dev/random|tr \  :)
    /sbin/e-smith/config setprop pihole mac $mac
fi

docker run -d --name pihole \
    -p 53:53/tcp \
    -p 53:53/udp \
    -p 80:80/tcp \
    -p 443:443/tcp \
    -p 67:67/udp \
    -v "/var/lib/pihole/etc-pihole/:/etc/pihole/" \
    -v "/var/lib/pihole/etc-dnsmasq.d/:/etc/dnsmasq.d/" \
    -v "/var/lib/pihole/var-log/:/var/log/" \
    -e TZ="$timezone" \
    -e WEBPASSWORD="$password"  \
    --hostname pi.hole \
    -e VIRTUAL_HOST="pi.hole" \
    -e IPv6="False" \
    -e dns="127.0.0.1" \
    -e dns="1.1.1.1" \
    -e DNS1="$DNS1" \
    -e DNS2="$DNS2" \
    -e DNSMASQ_LISTENING="local" \
    --cap-add NET_ADMIN \
    --net=aeria --mac-address=$mac \
    --restart=unless-stopped \
    pihole/pihole:latest
